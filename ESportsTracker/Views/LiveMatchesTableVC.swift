//
//  AllMatchesTableViewController.swift
//  ESportsTracker
//
//  Created by f1nch on 5.4.24.
//

import UIKit

class AllMatchesTableViewController: UITableViewController,MatchView {
        
    var presenter: Presenter?
    @IBOutlet var spinner: UIActivityIndicatorView?
    @IBOutlet var noLiveMatchesLabel: UILabel?
    
    
    //–ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —É—Å—Ç–∞–Ω–æ–≤–∏–º –∫—Ä—É—Ç–∏–ª–∫—É –ø–æ–∫–∞ –º–∞—Ç—á–∏ –≥—Ä—É–∑—è—Ç—Å—è + —É—Å—Ç–∞–Ω–æ–≤–∏–º –ø—Ä–µ–∑–µ–Ω—Ç–µ—Ä –º–æ–¥–µ–ª–∏,
    override func loadView() {
        super.loadView()
        
        spinner = UIActivityIndicatorView(style: .medium)
        spinner!.isHidden = true
        
        spinnerStartAnimating()
        
        noLiveMatchesLabel = UILabel(frame: CGRect(x: 41, y: 383, width: 310, height: 76))
        noLiveMatchesLabel!.font = UIFont.boldSystemFont(ofSize: 25)
        noLiveMatchesLabel!.text = "Matches are missing üòî"
        noLiveMatchesLabel!.textAlignment = NSTextAlignment.center
        noLiveMatchesLabel!.textColor = UIColor.white
        noLiveMatchesLabel!.isHidden = true
        
        
        presenter = LiveMatchPresenter(viewToPresent: self, matchesModel: MatchesInfoModel.shared)
        setModelPresenter(newPresenter: presenter)
        updateCurrentLiveMatches()
    }
    
    //—É—Å—Ç–∞–Ω–æ–≤–∏–º –≤—ã—Å–æ—Ç—É —Ä—è–¥–∞ —Ç–∞–±–ª–∏—Ü—ã –≤—Å–µ—Ö –º–∞—Ç—á–µ–π,—Å–¥–µ–ª–∞–Ω–æ —Ç–∫ –æ–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ —Å—á–∏—Ç—ã–≤–∞–ª–æ –µ—ë —Å–æ —Å—Ç–æ—Ä–∏–±–æ—Ä–¥–∞ –∏ –ª–æ–º–∞–ª–∞—Å—å
    override func viewDidLoad() {
        super.viewDidLoad()
        self.tableView.rowHeight = 123
        
    }

    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    //–∫–æ–ª-–≤–æ —Ä—è–¥–æ–≤ —Ç–∞–±–ª–∏—Ü—ã = –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ª–∞–π–≤ –º–∞—Ç—á–µ–π –∫—Å –≤ MatchesInfoModel
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        //–∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ TableView == –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤—É –ª–∞–π–≤ –∫—Å –º–∞—Ç—á–µ–π –≤ –º–æ–¥–µ–ª–∏
        return getLiveMatchPresenter().getCsMatchesCount()
    }

    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        var cell = tableView.dequeueReusableCell(withIdentifier: "MatchCell", for: indexPath)
        //–∑–∞–ø–æ–ª–Ω—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—É—é —è—á–µ–π–∫—É –≤–Ω—É—Ç—Ä–∏ –ø—Ä–µ–∑–µ–Ω—Ç–µ—Ä–∞ –ª–∞–π–≤ –º–∞—Ç—á–µ–π,
        //—Ç–∫ —É view –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫–Ω–∞–ø—Ä—è–º—É—é –∫ –º–æ–¥–µ–ª–∏
        
        cell = fillCellLiveMatch(cellToFill: cell, cellForRowAt: indexPath)
        return cell
    }
    
    override func tableView(_ tableView: UITableView, willDisplay cell: UITableViewCell, forRowAt indexPath: IndexPath) {
        cell.backgroundColor = UIColor.clear
    }
    
    //–≤–∫–ª—é—á–∏—Ç—å –∫—Ä—É—Ç–∏–ª–∫—É –æ–∑–Ω–∞—á–∞—é—â—É—é –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –æ –º–∞—Ç—á–∞—Ö
    func spinnerStartAnimating() {
        self.tableView.backgroundView = spinner
        spinner!.startAnimating()
        spinner!.isHidden = false
    }
    
    //–≤—ã–∫–ª—é—á–∏—Ç—å –∫—Ä—É—Ç–∏–ª–∫—É –æ–∑–Ω–∞—á–∞—é—â—É—é –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –æ –º–∞—Ç—á–∞—Ö
    func spinnerStopAnimating() {
        self.tableView.backgroundView = noLiveMatchesLabel
        spinner!.stopAnimating()
        spinner!.isHidden = true
    }

    //–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–µ–∑–µ–Ω—Ç–µ—Ä —Ç–∏–ø–∞ –ø—Ä–µ–∑–µ–Ω—Ç–µ—Ä–∞ –ª–∞–π–≤ –º–∞—Ç—á–µ–π,—Å–¥–µ–ª–∞–Ω–æ —á—Ç–æ–±—ã –Ω–µ –ø—Ä–∏–≤–æ–¥–∏—Ç—å –∏—Å–∫—É—Å—Ç–≤–µ–Ω–Ω–æ –ø—Ä–∏ –∫–∞–∂–¥–æ–π –Ω–∞–¥–æ–±–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–µ—Ä
    func getLiveMatchPresenter() -> LiveMatchPresenter {
        presenter as! LiveMatchPresenter
    }
    
    //—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–µ—Ä –º–æ–¥–µ–ª–∏
    //–æ–Ω —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ —ç—Ç–æ–º —ç–∫—Ä–∞–Ω–µ,—Ç–∫ –æ–Ω –≤—ã–±—Ä–∞–Ω –≤ TabBar controller –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é,–≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –ø—Ä–µ–∑–µ–Ω—Ç–µ—Ä—ã –º–æ–¥–µ–ª–µ–π —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è –≤ –∫–ª–∞—Å—Å–µ –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä–∞
    func setModelPresenter(newPresenter: Presenter?) {
        getLiveMatchPresenter().setModelPresenter(newPresenter: newPresenter!)
    }
    
    //–æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–¥—É—â–∏—Ö –º–∞—Ç—á–µ–π
    func updateCurrentLiveMatches() {
        hideNoMatchesMessage()
        getLiveMatchPresenter().updateCurrentLiveMatches()
    }
    
    //–∑–∞–ø–æ–ª–Ω–∏—Ç—å —è—á–µ–π–∫—É —Ç–∞–±–ª–∏—Ü—ã —Å–ø–∏—Å–∫–∞ –∏–¥—É—â–∏—Ö –º–∞—Ç—á–µ–π
    func fillCellLiveMatch(cellToFill: UITableViewCell, cellForRowAt: IndexPath) -> UITableViewCell{
        getLiveMatchPresenter().fillCellLiveMatch(cellToFill: cellToFill, cellForRowAt: cellForRowAt)
    }
    
    //—Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–∏–Ω–æ–∫ –≤ —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —è—á–µ–π–∫–∞—Ö –º–∞—Ç—á–µ–π,–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ä—Ç–∏–Ω–æ–∫ —Å —Å–µ—Ä–≤–µ—Ä–∞
    func reloadRows(at: [IndexPath], with: UITableView.RowAnimation) {
        tableView.reloadRows(at: at, with: with)
    }
    
    //—Ñ—É–Ω–∫–∏–π –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏ –≤—Å–µ–π —Ç–∞–±–ª–∏—Ü—ã –ª–∞–π–≤ –º–∞—Ç—á–µ–π,–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–∞–π–≤ –º–∞—Ç—á–µ–π
    func reloadData() {
        tableView.reloadData()
    }
    
    //–ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞—Ç—á–µ–π
    func showNoMatchesMessage() {
        noLiveMatchesLabel?.isHidden = false
        self.tableView.backgroundView = noLiveMatchesLabel
    }
    
    //—Å–∫—Ä—ã—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –º–∞—Ç—á–∏ –ø–æ—è–≤–∏–ª–∏—Å—å
    func hideNoMatchesMessage() {
        noLiveMatchesLabel?.isHidden = true
        self.tableView.backgroundView = spinner
    }
    
    // MARK: - Navigation
    
    //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–µ—Ä–µ—Ö–æ–¥ –∫ —ç–∫—Ä–∞–Ω—É —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∏ –ø–µ—Ä–µ–¥–∞—á–∞ –≤ –Ω–µ–≥–æ –º–∞—Ç—á–∞
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if segue.identifier == "ShowMatchDetail" {
            if let indexPath = tableView.indexPathForSelectedRow {
                let detailVC = segue.destination as! LiveMatchDetailsVC
                detailVC.matchIndex = indexPath
            }
        }
    }
}
